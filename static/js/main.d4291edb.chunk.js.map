{"version":3,"sources":["components/Button/Button.module.css","components/ContactForm/ContactForm.module.css","components/Button/Button.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.jsx","App.js","reportWebVitals.js","index.js","components/Filter/Filter.module.css","components/ContactList/ContactList.module.css"],"names":["module","exports","Button","type","onClick","btnName","disabled","className","styles","button","ContactForm","state","name","number","onFormSubmit","e","preventDefault","props","onSubmit","reset","setState","this","form","label","form_input","pattern","title","required","value","onChange","currentTarget","form_btn","Component","Filter","input","ContactList","contacts","onDelete","map","id","contact","App","filter","handleSubmit","find","alert","shortid","generate","hendleRemove","onFilter","hendleSearch","universalFilter","toLowerCase","includes","lscontacts","JSON","parse","localStorage","getItem","Array","isArray","setItem","stringify","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d4291edb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__nCz70\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__108G_\",\"label\":\"ContactForm_label__3QROp\",\"form_input\":\"ContactForm_form_input__13hjW\"};","import styles from './Button.module.css';\r\n\r\nfunction Button({ type, onClick, btnName, disabled }) {\r\n    return (\r\n      <button\r\n        type={type}\r\n        className={styles.button}\r\n        onClick={onClick}\r\n        disabled={disabled}\r\n      >\r\n        {btnName}\r\n      </button>\r\n    );\r\n  }\r\n  \r\n  export { Button };","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Button } from '../Button/Button';\r\nimport styles from './ContactForm.module.css';\r\n\r\nclass ContactForm extends Component {\r\n    state = {\r\n        name: '',\r\n        number: ''\r\n    }\r\n\r\n    onFormSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.onSubmit(this.state);\r\n        this.reset();\r\n    };\r\n    \r\n    reset = () => {\r\n        this.setState({ name: \"\", number: \"\" });\r\n    };\r\n\r\n    render () {\r\n        const { name, number } = this.state;\r\n\r\n        return (\r\n            <form onSubmit={this.onFormSubmit} className={styles.form}>\r\n                <label className={styles.label}>\r\n                  Name\r\n                    <input \r\n                        className={styles.form_input}\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                        required\r\n                        value={name}\r\n                        onChange={(e) => {\r\n                            this.setState({ name: e.currentTarget.value });\r\n                        }}/>\r\n                </label>\r\n                <label className={styles.label}>\r\n                  Number\r\n                    <input \r\n                        className={styles.form_input}\r\n                        type=\"tel\"\r\n                        name=\"number\"\r\n                        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                        required\r\n                        value={number}\r\n                        onChange={(e) => {\r\n                            this.setState({ number: e.currentTarget.value });\r\n                        }}/>\r\n                </label>\r\n                <Button type=\"submit\" btnName=\"Add contact\" disabled={!(name && number)} className={styles.form_btn}/>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nContactForm.propTypes = {\r\n    onSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nexport { ContactForm };","import PropTypes from 'prop-types';\r\nimport styles from './Filter.module.css';\r\n\r\nfunction Filter({ value, onChange }) {\r\n    return (\r\n        <label className={styles.label}>\r\n            Find contacts by name\r\n                <input type=\"text\" value={value} onChange={onChange} className={styles.input}/>\r\n        </label>\r\n    )\r\n}\r\n\r\nFilter.propTypes = {\r\n    value: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n  };\r\n\r\nexport { Filter };","import PropTypes from 'prop-types';\r\nimport styles from './ContactList.module.css';\r\n\r\nfunction ContactList ({ contacts, onDelete }) {\r\n    return (\r\n        <ul >\r\n        {contacts.map(({ id, name, number }) => (\r\n          <li key={id} className={styles.contact}>\r\n            <span>\r\n              {name}: {number}\r\n            </span>\r\n            <button\r\n              className={styles.button}\r\n              type=\"button\"\r\n              onClick={() => onDelete(id)}\r\n            >\r\n              Delete\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    )\r\n}\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.array.isRequired,\r\n  onDelete: PropTypes.func.isRequired,\r\n  \r\n};\r\n\r\nexport { ContactList };","import React, { Component } from 'react';\nimport shortid from 'short-id';\nimport './App.css';\nimport { ContactForm } from './components/ContactForm/ContactForm';\nimport { Filter } from './components/Filter/Filter';\nimport { ContactList } from './components/ContactList/ContactList';\n\nclass App extends Component {\n  state = {\n    contacts: [    \n      {id: 'id-1', name: 'Rosie Simpson', number: '459-12-56'},\n      {id: 'id-2', name: 'Hermione Kline', number: '443-89-12'},\n      {id: 'id-3', name: 'Eden Clements', number: '645-17-79'},\n      {id: 'id-4', name: 'Annie Copeland', number: '227-91-26'},\n    ],\n\n    filter: ''\n  }\n\n  componentDidMount() {\n    const lscontacts = JSON.parse(localStorage.getItem('contacts'));\n    if(lscontacts && Array.isArray(lscontacts)) {\n      this.setState({ contacts: lscontacts })\n    }\n  }\n\n  componentDidUpdate() {\n    localStorage.setItem('contacts', JSON.stringify(this.state.contacts))\n  }\n\n  handleSubmit = ({ name, number }) => {\n    if(this.state.contacts.find(contact => contact.name === name)) {\n      alert(`${name} already exists`)\n    } else {\n      this.setState(({ contacts }) => ({\n        contacts: [\n          ...contacts,\n          {\n            id: shortid.generate(),\n            name: name,\n            number: number,\n          },\n        ],\n      }))\n    }\n\n  }\n\n  hendleRemove = (id) => {\n    this.setState({\n      contacts: this.state.contacts.filter((contact) => contact.id !== id),\n    });\n  }\n\n  onFilter = (e) => {\n    this.setState({filter: e.currentTarget.value});\n  }\n\n  hendleSearch = () => {\n    const { contacts, filter } = this.state;\n    const universalFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(universalFilter),\n    );\n  };\n\n  render () {\n    const { filter } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>Phonebook</h1>\n        <ContactForm  onSubmit={this.handleSubmit}/>\n\n        <h2>Contacts</h2>\n        <Filter value={filter} onChange={this.onFilter}/>\n        <ContactList contacts={this.hendleSearch()} onDelete={this.hendleRemove}/>\n      </div>\n    );\n }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__1FGIK\",\"input\":\"Filter_input__2K5rZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact\":\"ContactList_contact__1R9jg\",\"button\":\"ContactList_button__2Jqg6\"};"],"sourceRoot":""}